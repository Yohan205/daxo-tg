{
	// Place your Ã¡rea de trabajo de Bot-wasa snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"commandBot":{
		"prefix": "TGnewCommand",
		"body": [
			"const { Client } = require('whatsapp-web.js');",
			"const Utilities = require('../../config/utils');",
			"\n",
			"module.exports = {",
				"\tname: \"$1\",",
				"\tdesc: \"$2\",",
				"\tusage: \"$3\",",
				"\tisPrivate: false,",
				"\tgroupOnly: false,",
				"\tcategory: \"$4\",",
				"\tcooldown: 10,",
				"\tstatus: true,",
				"\t/**",
				"\t* @param { Object } bot",
				"\t* @param { Object } message",
				"\t* @param { Array } ...args",
				"\t* @returns",
				"\t*/",
				"\trun: async(bot, message, ...args) => {",
				"\t\tconst from = message.from;",
				"\t\tconst chat = message.chat;",
				"\t\t",
				"\t\t$0",
				"\t}",
			"}"
		],
		"description": "Create a new command. Only bot WhatsApp"
	}
}